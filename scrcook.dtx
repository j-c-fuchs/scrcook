% \iffalse
%
%% scrcook.dtx
%% Copyright 2020 Jacob Fuchs
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Jacob Fuchs.
%
% This work consists of the files scrcook.dtx and scrcook.ins
% and the derived file scrcook.sty.
%
% \fi
%
% \iffalse
%
%<*package>
\NeedsTeXFormat{LaTeX2e}[2005/12/01]
\ProvidesPackage{scrcook}[2020/11/15 v0.0 Cooking recipe for KOMA-Script classes]
%</package>
%
%<*driver>
\documentclass{ltxdoc}
\usepackage{scrextend}
\usepackage{scrcook}
\usepackage{booktabs}
\usepackage{multicol}
\usepackage{csquotes}
\usepackage{hyperref}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{scrcook.dtx}
\end{document}
%</driver>
%
% \fi
%
% \GetFileInfo{scrcook.sty}
%
% \title{The \textsf{scrcook} package\thanks{This file
%        has version number \fileversion, last
%        revised \filedate.}}
% \author{Jacob Fuchs}
% \date{\filedate}
%
% \maketitle
%
% \begin{abstract}
%   This package adds support for cooking recipes within
%   \textsf{KOMA-Script} classes.
% \end{abstract}
%
% \section{Introduction}
% \label{sec:introduction}
%
% If you have any ideas for improvement, submit an issue at
% \url{www.github.com/j-c-fuchs/scrcook}.
%
% \section{Usage}
% \label{sec:usage}
%
% This package must be used with one of the \textsf{KOMA-Script} classes
% such as \textsf{scrarctl,} \textsf{scrreprt,} \textsf{scrbook} or
% \textsf{scrlttr2}.
% If you don't use them, use at least the \textsf{scrextend} package.
% Otherwise, there might be strange errors such as \texttt{command not
% found} etc.
%
% \subsection{Tutorial: How to write a recipe}
%
% \DescribeEnv{recipe}
% \DescribeMacro{\ingredients}
% \DescribeMacro{\preparation}
% Recipes are typeset using the |recipe| environment.
% Let's write a simple recipe:
%\begin{verbatim}
%  \begin{recipe}{Boiled eggs}
%    \ingredients
%    2 eggs
%    \preparation
%    Boil some water.
%    Put the eggs in the water such that they are fully covered.
%    Boil them for 6--8\,min or 8--10\,min,
%    depending on whether you want them to be soft- or hard-boiled.
%    Put them under cold water immediately to stop the cooking process.
%  \end{recipe}
%\end{verbatim}
% This is typeset as:
% \begin{recipe}{Boiled eggs}
%   \ingredients
%   2 eggs
%   \preparation
%   Boil some water.
%   Put the eggs in the water such that they are fully covered.
%   Boil them for 6--8\,min or 8--10\,min,
%   depending on whether you want them to be soft- or hard-boiled.
%   Put them under cold water immediately to stop the cooking process.
% \end{recipe}
% As you can see, the recipes have the following structure:
%\begin{verbatim}
%  \begin{recipe}{<title of the recipe>}
%    \ingredients
%    <ingredients>
%    \preparation
%    <instructions for preparations>
%  \end{recipe}
%\end{verbatim}
%
% \subsection{Change the appearance of recipes}
%
% \DescribeMacro{recipetitle}
% \DescribeMacro{recipebody}
% \DescribeMacro{recipecomp}
% The fonts of the recipes are controlled with the methods from
% \textsf{KOMA-Script:}
% For every recipe element, there is a |komafont|.
% A style command can be added using |\addtokomafont|;
% \textit{e.\,g.\@}
%\begin{verbatim}
%  \addtokomafont{recipetitle}{\sffamily}
%\end{verbatim}
% will make the title \textsf{sans-serif.}
% The font can also be completely changed with |\setkomafont|, thus,
%\begin{verbatim}
%  \addtokomafont{recipecomp}{\sffamily}
%\end{verbatim}
% will make the recipe components \textsf{sans-serif,} but will drop all
% previous formatting (|\itshape| in this case).
% All fonts and default definitions are listed in
% tab.~\ref{tab:recipefonts}.
% \begin{table}[htbp]
%   \centering
%   \caption{Fonts of the recipe elements.}
%   \label{tab:recipefonts}
%   \vspace{\abovecaptionskip}
%   \begin{tabular}{ccc}
%     \toprule
%     fontname &
%       default &
%       description \\
%     \cmidrule(lr){1-1} \cmidrule(lr){2-2} \cmidrule(lr){3-3}
%     |recipetitle| &
%       |\normalfont\bfseries| &
%       title of the recipe \\
%     |recipebody| &
%       |\normalfont| &
%       text of the recipe \\
%     |recipecomp| &
%       |\itshape| &
%       \parbox[t]{.35\linewidth}{\centering
%         components of the recipe \\
%         (ingredients etc.)} \\
%     \bottomrule
%   \end{tabular}
% \end{table}
%
% \DescribeMacro{\recipecompsep}
% The recipe components are indicated by a separator,
% a colon \enquote{:} by default.
% The separator can be changed using |\renewcommand|:
%\begin{verbatim}
%  \renewcommand{\recipecompsep}{---}
%\end{verbatim}
% makes |\ingredients| print
% \enquote{\usekomafont{recipecomp}{Ingredients---}}.\footnote{Note that
% for this example, it is better to also remove the space between the
% recipe components and the text.}
%
% \DescribeMacro{\recipetopsep}
% \DescribeMacro{\recipepartopsep}
% \DescribeMacro{\recipeitemsep}
% The vertical spacing can be controlled by redefining the
% |\recipetopsep|, |\recipepartopsep| and |\recipeitemsep| macros.
% Internally, the recipe is implemented as |trivlist|
% (where every component is a new item)
% and the mentioned macros set the corresponding spacings for the
% |trivlist|.
%
% \DescribeMacro{\recipeitemindent}
% \DescribeMacro{\recipelabelwidth}
% \DescribeMacro{\recipelabelsep}
% Analogously, the horizontal spacing can be controlled by redefining
% |\recipeitemindent|, |\recipelabelwidth| and |\recipelabelsep|.
%
% \DescribeMacro{\raggedrecipetitle}
% The alignment of the recipe title is controlled by
% |\raggedrecipetitle|.
% To make it appear on the left on odd pages and on the right on even
% pages, use
%\begin{verbatim}
%  \renewcommand{\raggedrecipetitle}{%
%    \Ifthispageodd{\raggedleft}{\raggedright}%
%  }
%\end{verbatim}
% (note that this relies on the macro |\Ifthispageodd|
% from \textsf{KOMA-Script}).
%
% \subsection{Language support}
%
% \DescribeMacro{\recipename}
% \DescribeMacro{\ingredientsname}
% \DescribeMacro{\preparationname}
% \DescribeMacro{\recipeintroname}
% \DescribeMacro{\recipenotename}
% \DescribeMacro{\servingsname}
% \DescribeMacro{\servingsprename}
% \DescribeMacro{\recipetimename}
% \DescribeMacro{\nutritionalvaluename}
% The name of the different components of the recipe are provided using
% |\ingredientsname| etc.
% All names and their meaning are listed in table~\ref{tab:names}.
% These are currently only supported for \textsf{english} and the german
% languages \textsf{german, ngerman, austrian, naustrian, siwssgerman}
% and \textsf{nswissgerman.}
% \begin{table}[htbp]
%   \centering
%   \caption{Language-dependent names added by this package.}
%   \label{tab:names}
%   \vspace{\abovecaptionskip}
%   \begin{tabular}{cc}
%     \toprule
%     name & description \\
%     \cmidrule(lr){1-1} \cmidrule(lr){2-2}
%     |\recipename| & Name of the recipe \\
%     |\ingredientsname| & ingredients list \\
%     |\preparationname| & preparation instructions \\
%     |\recipeintroname| & introduction \\
%     |\recipenotename| & note (tipps, variants etc.) \\
%     |\servingsname| & number of servings \\
%     |\servingsprename| & term before number of servings \\
%     |\recipetimename| & total time until serving \\
%     |\nutritionalvaluename| & nutritional value \\
%     \bottomrule
%   \end{tabular}
% \end{table}
%
% The user can provide additional languages and terms with the command
%\begin{verbatim}
%  \providecaptionname{<language list>}{<term>}{<definition>}
%\end{verbatim}
% from \textsf{KOMA-Script.}
% See the \textsf{KOMA-Script} documentation for more info.
% One can also redefine such names with
%\begin{verbatim}
%  \renewcaptionname{<language list>}{<term>}{<definition>}
%\end{verbatim}
%
% \subsection{Change the recipe title}
%
% \DescribeMacro{recipetitle}
% The title of the recipe is typeset using the |\recipetitle| command.
% If you want to change it, \textit{e.\,g.\@} to make it a subsection,
% you can use
%\begin{verbatim}
%  \renewcommand{\recipetitle}{\subsection}
%\end{verbatim}
%
% \DescribeEnv{recipebody}
% If you want to show additional information in the title on the right,
% you can define a new title command \textit{e.\,g.\@} like
%\begin{verbatim}
%  \newcommand{\myrecipetitle}[2]{%
%    \recipetitle{#1\hfill{\mdseries\itshape #2}}
%  }
%\end{verbatim}
% (or use a modification of the |\recipetitle| implementation below).
% However, the |recipe| environment only accepts one argument.
% This problem can be overcome by defining a new environment as follows
%\begin{verbatim}
%  \newenvironment{\myrecipe}[2]{%
%    \myrecipetitle{#1}{#2}%
%    \begin{recipebody}%
%  }{%
%    \end{recipebody}%
%  }
%\end{verbatim}
% since the recipe body is implemented in the |recipebody| environment.
%
% \section{Implementation}
% \label{sec:implementation}
%
% \StopEventually{}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% \begin{macro}{recipetitle,recipecomp,recipebody}
%    \begin{macrocode}
\newkomafont{recipetitle}{\normalfont\bfseries}
\newkomafont{recipecomp}{\itshape}
\newkomafont{recipebody}{\normalfont}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\raggedrecipetitle}
%    \begin{macrocode}
\newcommand{\raggedrecipetitle}{\raggedright}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\recipetitle}
% The following code is analogous to the definition of the |\minisec|
% macro of \textsf{scrbook.}
%    \begin{macrocode}
\newcommand{\recipetitle}[1]{%
  \par
  \@afterindentfalse
  \if@nobreak
    \everypar{}%
  \else
    \addpenalty\@secpenalty\addvspace{1.5ex}%
  \fi
  {\parindent \z@
    \setlength{\parfillskip}{\z@ plus 1fil}
    \raggedrecipetitle\normalfont\nobreak
    \usekomafont{recipetitle}{\nobreak\interlinepenalty \@M #1\par\nobreak}%
  }\nobreak
  \@afterheading
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\recipename}
% Add language support for the diffent components.
%    \begin{macrocode}
\providecaptionname{english}{\recipename}{recipe}
\providecaptionname{german,ngerman,austrian,naustrian,swissgerman,nswissgerman}{\recipename}{Rezept}
\providecaptionname{english}{\recipeintroname}{Introduction}
\providecaptionname{german,ngerman,austrian,naustrian,swissgerman,nswissgerman}{\recipeintroname}{Einleitung}
\providecaptionname{english}{\ingredientsname}{Ingredients}
\providecaptionname{german,ngerman,austrian,naustrian,swissgerman,nswissgerman}{\ingredientsname}{Zutaten}
\providecaptionname{english}{\preparationname}{Preparation}
\providecaptionname{german,ngerman,austrian,naustrian,swissgerman,nswissgerman}{\preparationname}{Zubereitung}
\providecaptionname{english}{\recipenotename}{Note}
\providecaptionname{german,ngerman,austrian,naustrian,swissgerman,nswissgerman}{\recipenotename}{Anmerkung}
\providecaptionname{english}{\servingsname}{servings}
\providecaptionname{german,ngerman,austrian,naustrian,swissgerman,nswissgerman}{\servingsname}{Portionen}
\providecaptionname{english}{\servingsprename}{for}
\providecaptionname{german,ngerman,austrian,naustrian,swissgerman,nswissgerman}{\servingsprename}{für}
\providecaptionname{english}{\recipetimename}{recipetime}
\providecaptionname{german,ngerman,austrian,naustrian,swissgerman,nswissgerman}{\recipetimename}{Zeit bis Servierung}
\providecaptionname{english}{\nutritionalvaluename}{Nutritional value}
\providecaptionname{german,ngerman,austrian,naustrian,swissgerman,nswissgerman}{\nutritionvaluename}{Nährwert}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\recipecompsep}
%    \begin{macrocode}
\newcommand{\recipecompsep}{:}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\recipecomp}
%    \begin{macrocode}
\newcommand{\recipecomp}[1]{%
  \item[\hskip\labelsep \usekomafont{recipecomp}{#1\recipecompsep}]%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\recipe@comp@defs}
% Makro to define the components of the recipe:
%    \begin{macrocode}
\newcommand{\recipe@comp@defs}{%
  \newcommand{\ingredients}{\recipecomp{\ingredientsname}}%
  \newcommand{\preparation}{\recipecomp{\preparationname}}%
  \newcommand{\recipeintro}{\recipecomp{\recipeintroname}}%
  \newcommand{\recipenote}{\recipecomp{\recipenotename}}%
  \newcommand{\servings}{\recipecomp{\servingsname}}%
  \newcommand{\recipetime}{\recipecomp{\recipetimename}}%
  \newcommand{\nutritionalvalue}{\recipecomp{\nutritionalvaluename}}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{vertical spacing}
% Macros for vertical spacing (which can be modified by the users):
%    \begin{macrocode}
\newcommand{\recipetopsep}{\parskip}%
\newcommand{\recipepartopsep}{\medskipamount}%
\newcommand{\recipeitemsep}{\parskip}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{horizontal spacing}
% Macros for horizontal spacing (which can be modified by the users):
%    \begin{macrocode}
\newcommand{\recipeitemindent}{\z@}%
\newcommand{\recipelabelwidth}{\z@}%
\newcommand{\recipelabelsep}{\labelsep}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\recipe@outer@space@defs}
% Makro to define the spacings for the recipe \emph{before} starting the
% recipe list:
%    \begin{macrocode}
\newcommand{\recipe@outer@space@defs}{%
  \setlength{\topsep}{\recipetopsep}%
  \setlength{\partopsep}{\recipepartopsep}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\recipe@inner@space@defs}
% Makro to define the spacings for the recipe \emph{after} starting the
% recipe list:
%    \begin{macrocode}
\newcommand{\recipe@inner@space@defs}{%
  \setlength{\itemsep}{\recipeitemsep}%
  \setlength{\itemindent}{\recipeitemindent}%
  \setlength{\labelwidth}{\recipelabelwidth}%
  \setlength{\labelsep}{\recipelabelsep}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{recipebody}
% Define the environment for the body of the recipe.
%    \begin{macrocode}
\newenvironment{recipebody}{%
  \recipe@outer@space@defs%
  \begin{trivlist}%
    \recipe@inner@space@defs%
    \recipe@comp@defs%
    \usekomafont{recipebody}%
}{%
  \end{trivlist}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{recipe}
% Finally, define the recipe environment---the heart of this package.
%    \begin{macrocode}
\newenvironment{recipe}[1]{%
  \recipetitle{#1}%
  \begin{recipebody}%
}{\end{recipebody}}
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \Finale
\endinput
